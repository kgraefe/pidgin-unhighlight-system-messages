PLUGIN_SRC :=		./src
PLUGIN_PO :=		./po

PLUGIN_TOP := .
-include $(PLUGIN_TOP)/local.mak

PIDGIN_TREE_TOP ?=		../../..
include $(PIDGIN_TREE_TOP)/libpurple/win32/global.mak

PLUGIN := pidgin-unhighlight-system-messages
PLUGIN_VERSION := $(shell ./scripts/gen-version.sh)
PLUGIN_WIN32_ZIP := $(PLUGIN)-$(PLUGIN_VERSION)-win32.zip

.PHONY: all build install installer clean

all: build

build: config.h
	$(MAKE) -C $(PLUGIN_SRC) -f Makefile.mingw all
	$(MAKE) -C $(PLUGIN_PO) -f Makefile.mingw all

config.h: .stamp-version-$(PLUGIN_VERSION) configure.ac scripts/gen-mingw-config_h.sh
	./scripts/gen-mingw-config_h.sh > config.h

.stamp-version-$(PLUGIN_VERSION):
	rm -f .stamp-version*
	touch $@

# If configure.ac.in exists, we generate configure.ac. Otherwise we assume that
# configure.ac exists (as in the release tarball).
ifneq ("$(wildcard configure.ac.in)", "")
configure.ac: configure.ac.in .stamp-version-$(PLUGIN_VERSION) ./scripts/gen-configure_ac.sh
	./scripts/gen-configure_ac.sh
endif

dist: $(PLUGIN_WIN32_ZIP)

$(PLUGIN_WIN32_ZIP): build
	./scripts/gen-mingw-dist.sh $@ $(PLUGIN) $(PLUGIN).dll

clean:
	$(MAKE) -C $(PLUGIN_SRC) -f Makefile.mingw clean
	rm -f config.h
